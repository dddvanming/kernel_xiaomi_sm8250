name: CI
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "upstr" branch
  push:
    branches: [ "android12-stable" ]
  pull_request:
    branches: [ "android12-stable" ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on                                                             runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it                           - uses: actions/checkout@v3
                                                                                                                # Runs a single command using the runners shell
      - name: Run a one-line script
        run: echo Hello, world!

      # Runs a set of commands using the runners shell
      - name: Run a multi-line script
        shell: bash
        run: |
          echo Add other actions to build,
          echo test, and deploy your project.
      - name: compile!                                                                                                    
        run: |
           sudo apt-get update
           sudo apt-get upgrade                                                                                      sudo apt-get install python bash sed wget git curl zip tar expect make cmake automake autoconf bison perl gperf gawk flex bc zstd openssl libcurl4-openssl-dev clang clang-tools gcc gcc-10-aarch64-linux-gnu build-essential                                                                             run: |
           sudo apt-get install aria2 && sudo aria2c https://android.googlesource.com/platform/prebuilts/clang/host/linux-x86/+archive/refs/heads/master.tar.gz && sudo tar -xzvf master.tar.gz
           sudo su
           sudo su
           alias cp="cp"
           sudo cd clang-r458507/ && sudo cp -rf ./bin/* /bin && sudo cp -rf ./lib64/* /lib
           sudo cd .. && cp h/* /usr/include/ -rf
           sudo chmod 777 *
           sudo clang -v
           sudo make O=out ARCH=arm64 CC=clang CLANG_TARIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- -j8 alioth_defconfig
           sudo make CONFIG_SECTION_MISMATCH_WARN_ONLY=y O=out ARCH=arm64 CC=clang CLANG_TARIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- -j8
      - uses: actions/upload-artifact@v3
        with:
            name: kernel
            path: out/arch/arm64/boot
